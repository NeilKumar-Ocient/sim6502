This file outlines the goals of this project overall, and the goals per phase

Overall Goals:
	-Learn how to architect and design systems and write code by myself from scratch
	-Learn how to create good build systems using make
	-Learn how to do performance testing and write performance code from the start
	-Learn how to teach others and help others grow an engineers, specifically Neil for this project
	
Phase 1 Goals:
	-Implement a clock that runs at an arbitrary frequency and maintains cycles at the frequency as closely as possible.
	 We probably also want a way to turn off the clock assertions for debug builds since those will probably
	 be too slow to make the clock cycles in time
	-Implement an mmu for the 6502 without memory redirection //Done
	-Implement a 6502 CPU that takes in a program as specified and runs it //Done
	-Implement all of the instructions for the 6502
	-Implement a logger so that we can see debug logs along with assertions, also we want to be able to turn these off
	-Implement a way to turn off assertions and debug logs through make flags
	-Maybe implement the extra cycles for instructions that cross page boundaries, this is easy to do once we know we crossed one,
	 but detecting that a page boundary was crossed is more difficult.  I'm ok with not doing this.
#include "cpu.h"
#include "instructions.h"

uint8_t cpu_t::run() {
	//start the clock, then enter a loop to repeatedly execute the instruction at the program counter
	LOG_DEBUG("Starting program");
	m_clock.start();

	//TODO when do we finish the program?
	while(true) {
		//read the instruction at the program counter, and finish a cycle
		uint8_t opCode = m_mmu.read(m_pc);
		cycle();

		//execute the instruction
		m_pc = executeInstruction(opCode);
	}

	return 0;
}

uint16_t cpu_t::executeInstruction(uint8_t opCode) {
	//switch based on the opCode to run the correct instruction
	LOG_DEBUG("Executing instruction with opCode %lu", opCode);
	switch(opCode) {
		case 0x00 : return BRK<addressMode_t::IMPLIED>(this);
		case 0x01 : return ORA<addressMode_t::INDIRECT_X>(this);
		case 0x02 : throw;
		case 0x03 : throw;
		case 0x04 : throw;
		case 0x05 : return ORA<addressMode_t::ZERO_PAGE>(this);
		case 0x06 : return ASL<addressMode_t::ZERO_PAGE>(this);
		case 0x07 : throw;
		case 0x08 : return PHP<addressMode_t::IMPLIED>(this);
		case 0x09 : return ORA<addressMode_t::IMMEDIATE>(this);
		case 0x0A : return ASL<addressMode_t::ACCUMULATOR>(this);
		case 0x0B : throw;
		case 0x0C : throw;
		case 0x0D : return ORA<addressMode_t::ABSOLUTE>(this);
		case 0x0E : return ASL<addressMode_t::ABSOLUTE>(this);
		case 0x0F : throw;
		case 0x10 : return BPL<addressMode_t::RELATIVE>(this);
		case 0x11 : return ORA<addressMode_t::INDIRECT_Y>(this);
		case 0x12 : throw;
		case 0x13 : throw;
		case 0x14 : throw;
		case 0x15 : return ORA<addressMode_t::ZERO_PAGE_X>(this);
		case 0x16 : return ASL<addressMode_t::ZERO_PAGE_X>(this);
		case 0x17 : throw;
		case 0x18 : return CLC<addressMode_t::IMPLIED>(this);
		case 0x19 : return ORA<addressMode_t::ABSOLUTE_Y>(this);
		case 0x1A : throw;
		case 0x1B : throw;
		case 0x1C : throw;
		case 0x1D : return ORA<addressMode_t::ABSOLUTE_X>(this);
		case 0x1E : return ASL<addressMode_t::ABSOLUTE_X>(this);
		case 0x1F : throw;
		case 0x20 : return JSR<addressMode_t::ABSOLUTE>(this);
		case 0x21 : return AND<addressMode_t::INDIRECT_X>(this);
		case 0x22 : throw;
		case 0x23 : throw;
		case 0x24 : return BIT<addressMode_t::ZERO_PAGE>(this);
		case 0x25 : return AND<addressMode_t::ZERO_PAGE>(this);
		case 0x26 : return ROL<addressMode_t::ZERO_PAGE>(this);
		case 0x27 : throw;
		case 0x28 : return PLP<addressMode_t::IMPLIED>(this);
		case 0x29 : return AND<addressMode_t::IMMEDIATE>(this);
		case 0x2A : return ROL<addressMode_t::ACCUMULATOR>(this);
		case 0x2B : throw;
		case 0x2C : return BIT<addressMode_t::ABSOLUTE>(this);
		case 0x2D : return AND<addressMode_t::ABSOLUTE>(this);
		case 0x2E : return ROL<addressMode_t::ABSOLUTE>(this);
		case 0x2F : throw;
		case 0x30 : return BMI<addressMode_t::RELATIVE>(this);
		case 0x31 : return AND<addressMode_t::INDIRECT_Y>(this);
		case 0x32 : throw;
		case 0x33 : throw;
		case 0x34 : throw;
		case 0x35 : return AND<addressMode_t::ZERO_PAGE_X>(this);
		case 0x36 : return ROL<addressMode_t::ZERO_PAGE_X>(this);
		case 0x37 : throw;
		case 0x38 : return SEC<addressMode_t::IMPLIED>(this);
		case 0x39 : return AND<addressMode_t::ABSOLUTE_Y>(this);
		case 0x3A : throw;
		case 0x3B : throw;
		case 0x3C : throw;
		case 0x3D : return AND<addressMode_t::ABSOLUTE_X>(this);
		case 0x3E : return ROL<addressMode_t::ABSOLUTE_X>(this);
		case 0x3F : throw;
		case 0x40 : return RTI<addressMode_t::IMPLIED>(this);
		case 0x41 : return EOR<addressMode_t::INDIRECT_X>(this);
		case 0x42 : throw;
		case 0x43 : throw;
		case 0x44 : throw;
		case 0x45 : return EOR<addressMode_t::ZERO_PAGE>(this);
		case 0x46 : return LSR<addressMode_t::ZERO_PAGE>(this);
		case 0x47 : throw;
		case 0x48 : return PHA<addressMode_t::IMPLIED>(this);
		case 0x49 : return EOR<addressMode_t::IMMEDIATE>(this);
		case 0x4A : return LSR<addressMode_t::ACCUMULATOR>(this);
		case 0x4B : throw;
		case 0x4C : return JMP<addressMode_t::ABSOLUTE>(this);
		case 0x4D : return EOR<addressMode_t::ABSOLUTE>(this);
		case 0x4E : return LSR<addressMode_t::ABSOLUTE>(this);
		case 0x4F : throw;
		case 0x50 : return BVC<addressMode_t::RELATIVE>(this);
		case 0x51 : return EOR<addressMode_t::INDIRECT_Y>(this);
		case 0x52 : throw;
		case 0x53 : throw;
		case 0x54 : throw;
		case 0x55 : return EOR<addressMode_t::ZERO_PAGE_X>(this);
		case 0x56 : return LSR<addressMode_t::ZERO_PAGE_X>(this);
		case 0x57 : throw;
		case 0x58 : return PLA<addressMode_t::IMPLIED>(this);
		case 0x59 : return EOR<addressMode_t::ABSOLUTE_Y>(this);
		case 0x5A : throw;
		case 0x5B : throw;
		case 0x5C : throw;
		case 0x5D : return EOR<addressMode_t::ABSOLUTE_X>(this);
		case 0x5E : return LSR<addressMode_t::ABSOLUTE_X>(this);
		case 0x5F : throw;
		case 0x60 : return RTS<addressMode_t::IMPLIED>(this);
		case 0x61 : return ADC<addressMode_t::INDIRECT_X>(this);
		case 0x62 : throw;
		case 0x63 : throw;
		case 0x64 : throw;
		case 0x65 : return ADC<addressMode_t::ZERO_PAGE>(this);
		case 0x66 : return ROR<addressMode_t::ZERO_PAGE>(this);
		case 0x67 : throw;
		case 0x68 : return PLA<addressMode_t::IMPLIED>(this);
		case 0x69 : return ADC<addressMode_t::IMMEDIATE>(this);
		case 0x6A : return ROR<addressMode_t::ACCUMULATOR>(this);
		case 0x6B : throw;
		case 0x6C : return JMP<addressMode_t::INDIRECT>(this);
		case 0x6D : return ADC<addressMode_t::ABSOLUTE>(this);
		case 0x6E : return ROR<addressMode_t::ABSOLUTE>(this);
		case 0x6F : throw;
		case 0x70 : return BVS<addressMode_t::RELATIVE>(this);
		case 0x71 : return ADC<addressMode_t::INDIRECT_Y>(this);
		case 0x72 : throw;
		case 0x73 : throw;
		case 0x74 : throw;
		case 0x75 : return ADC<addressMode_t::ZERO_PAGE_X>(this);
		case 0x76 : return ROR<addressMode_t::ZERO_PAGE_X>(this);
		case 0x77 : throw;
		case 0x78 : return SEI<addressMode_t::IMPLIED>(this);
		case 0x79 : return ADC<addressMode_t::ABSOLUTE_Y>(this);
		case 0x7A : throw;
		case 0x7B : throw;
		case 0x7C : throw;
		case 0x7D : return ADC<addressMode_t::ABSOLUTE_X>(this);
		case 0x7E : return ROR<addressMode_t::ABSOLUTE_X>(this);
		case 0x7F : throw;
		case 0x80 : throw;
		case 0x81 : return STA<addressMode_t::INDIRECT_X>(this);
		case 0x82 : throw;
		case 0x83 : throw;
		case 0x84 : return STY<addressMode_t::ZERO_PAGE>(this);
		case 0x85 : return STA<addressMode_t::ZERO_PAGE>(this);
		case 0x86 : return STX<addressMode_t::ZERO_PAGE>(this);
		case 0x87 : throw;
		case 0x88 : return DEY<addressMode_t::IMPLIED>(this);
		case 0x89 : throw;
		case 0x8A : return TXA<addressMode_t::IMPLIED>(this);
		case 0x8B : throw;
		case 0x8C : return STY<addressMode_t::ABSOLUTE>(this);
		case 0x8D : return STA<addressMode_t::ABSOLUTE>(this);
		case 0x8E : return STX<addressMode_t::ABSOLUTE>(this);
		case 0x8F : throw;
		case 0x90 : return BCC<addressMode_t::RELATIVE>(this);
		case 0x91 : return STA<addressMode_t::INDIRECT_Y>(this);
		case 0x92 : throw;
		case 0x93 : throw;
		case 0x94 : return STY<addressMode_t::ZERO_PAGE_X>(this);
		case 0x95 : return STA<addressMode_t::ZERO_PAGE_X>(this);
		case 0x96 : return STX<addressMode_t::ZERO_PAGE_X>(this);
		case 0x97 : throw;
		case 0x98 : return TYA<addressMode_t::IMPLIED>(this);
		case 0x99 : return STA<addressMode_t::ABSOLUTE_Y>(this);
		case 0x9A : return TXS<addressMode_t::IMPLIED>(this);
		case 0x9B : throw;
		case 0x9C : throw;
		case 0x9D : return STA<addressMode_t::ABSOLUTE_X>(this);
		case 0x9E : throw;
		case 0x9F : throw;
		case 0xA0 : return LDY<addressMode_t::IMMEDIATE>(this);
		case 0xA1 : return LDA<addressMode_t::INDIRECT_X>(this);
		case 0xA2 : return LDX<addressMode_t::IMMEDIATE>(this);
		case 0xA3 : throw;
		case 0xA4 : return LDY<addressMode_t::ZERO_PAGE>(this);
		case 0xA5 : return LDA<addressMode_t::ZERO_PAGE>(this);
		case 0xA6 : return LDX<addressMode_t::ZERO_PAGE>(this);
		case 0xA7 : throw;
		case 0xA8 : return TAY<addressMode_t::IMPLIED>(this);
		case 0xA9 : return LDA<addressMode_t::IMMEDIATE>(this);
		case 0xAA : return TAX<addressMode_t::IMPLIED>(this);
		case 0xAB : throw;
		case 0xAC : return LDY<addressMode_t::ABSOLUTE>(this);
		case 0xAD : return LDA<addressMode_t::ABSOLUTE>(this);
		case 0xAE : return LDX<addressMode_t::ABSOLUTE>(this);
		case 0xAF : throw;
		case 0xB0 : return BCS<addressMode_t::RELATIVE>(this);
		case 0xB1 : return LDA<addressMode_t::INDIRECT_Y>(this);
		case 0xB2 : throw;
		case 0xB3 : throw;
		case 0xB4 : return LDY<addressMode_t::ZERO_PAGE_X>(this);
		case 0xB5 : return LDA<addressMode_t::ZERO_PAGE_X>(this);
		case 0xB6 : return LDX<addressMode_t::ZERO_PAGE_X>(this);
		case 0xB7 : throw;
		case 0xB8 : return CLV<addressMode_t::IMPLIED>(this);
		case 0xB9 : return LDA<addressMode_t::ABSOLUTE_Y>(this);
		case 0xBA : return TSX<addressMode_t::IMPLIED>(this);
		case 0xBB : throw;
		case 0xBC : return LDY<addressMode_t::ABSOLUTE_X>(this);
		case 0xBD : return LDA<addressMode_t::ABSOLUTE_X>(this);
		case 0xBE : return LDX<addressMode_t::ABSOLUTE_Y>(this);
		case 0xBF : throw;
		case 0xC0 : return CPY<addressMode_t::IMMEDIATE>(this);
		case 0xC1 : return CMP<addressMode_t::INDIRECT_X>(this);
		case 0xC2 : throw;
		case 0xC3 : throw;
		case 0xC4 : return CPY<addressMode_t::ZERO_PAGE>(this);
		case 0xC5 : return CMP<addressMode_t::ZERO_PAGE>(this);
		case 0xC6 : return DEC<addressMode_t::ZERO_PAGE>(this);
		case 0xC7 : throw;
		case 0xC8 : return INY<addressMode_t::IMPLIED>(this);
		case 0xC9 : return CMP<addressMode_t::IMMEDIATE>(this);
		case 0xCA : return DEX<addressMode_t::IMPLIED>(this);
		case 0xCB : throw;
		case 0xCC : return CPY<addressMode_t::ABSOLUTE>(this);
		case 0xCD : return CMP<addressMode_t::ABSOLUTE>(this);
		case 0xCE : return DEC<addressMode_t::ABSOLUTE>(this);
		case 0xCF : throw;
		case 0xD0 : return BNE<addressMode_t::RELATIVE>(this);
		case 0xD1 : return CMP<addressMode_t::INDIRECT_Y>(this);
		case 0xD2 : throw;
		case 0xD3 : throw;
		case 0xD4 : throw;
		case 0xD5 : return CMP<addressMode_t::ZERO_PAGE_X>(this);
		case 0xD6 : return DEC<addressMode_t::ZERO_PAGE_X>(this);
		case 0xD7 : throw;
		case 0xD8 : return CLD<addressMode_t::IMPLIED>(this);
		case 0xD9 : return CMP<addressMode_t::ABSOLUTE_Y>(this);
		case 0xDA : throw;
		case 0xDB : throw;
		case 0xDC : throw;
		case 0xDD : return CMP<addressMode_t::ABSOLUTE_X>(this);
		case 0xDE : return DEC<addressMode_t::ABSOLUTE_X>(this);
		case 0xDF : throw;
		case 0xE0 : return CPX<addressMode_t::IMMEDIATE>(this);
		case 0xE1 : return SBC<addressMode_t::INDIRECT_X>(this);
		case 0xE2 : throw;
		case 0xE3 : throw;
		case 0xE4 : return CPX<addressMode_t::ZERO_PAGE>(this);
		case 0xE5 : return SBC<addressMode_t::ZERO_PAGE>(this);
		case 0xE6 : return INC<addressMode_t::ZERO_PAGE>(this);
		case 0xE7 : throw;
		case 0xE8 : return INX<addressMode_t::IMPLIED>(this);
		case 0xE9 : return SBC<addressMode_t::IMMEDIATE>(this);
		case 0xEA : return NOP<addressMode_t::IMPLIED>(this);
		case 0xEB : throw;
		case 0xEC : return CPX<addressMode_t::ABSOLUTE>(this);
		case 0xED : return SBC<addressMode_t::ABSOLUTE>(this);
		case 0xEE : return INC<addressMode_t::ABSOLUTE>(this);
		case 0xEF : throw;
		case 0xF0 : return BEQ<addressMode_t::RELATIVE>(this);
		case 0xF1 : return SBC<addressMode_t::INDIRECT_Y>(this);
		case 0xF2 : throw;
		case 0xF3 : throw;
		case 0xF4 : throw;
		case 0xF5 : return SBC<addressMode_t::ZERO_PAGE_X>(this);
		case 0xF6 : return INC<addressMode_t::ZERO_PAGE_X>(this);
		case 0xF7 : throw;
		case 0xF8 : return SED<addressMode_t::IMPLIED>(this);
		case 0xF9 : return SBC<addressMode_t::ABSOLUTE_Y>(this);
		case 0xFA : throw;
		case 0xFB : throw;
		case 0xFC : throw;
		case 0xFD : return SEC<addressMode_t::ABSOLUTE_X>(this);
		case 0xFE : return INC<addressMode_t::ABSOLUTE_X>(this);
		case 0xFF : throw;
		default : throw; //not possible
	}
	return 0;
}
